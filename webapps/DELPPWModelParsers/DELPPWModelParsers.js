define("DS/DELPPWModelParsers/ConnectionParser",["UWA/Core","UWA/Class","UWA/Class/Promise","DS/DELPPWLoggerModel/LoggerUtils"],function(h,a,c,d){var b=a.singleton({name:"ConnectionParser",collectionUtils:null,init:function g(j){var i=this;j=j||{};i._parent(j);if(!j.collectionUtils){throw new Error("collectionUtils options not defined")}this.collectionUtils=j.collectionUtils},parse:function f(u,B,y,l){var s=this,k=l||{},i=h.is(k.silentMode,"boolean")?k.silentMode:true,o=h.is(k.mergeMode,"boolean")?k.mergeMode:true,r=h.is(k.parseMode,"boolean")?k.parseMode:true,z={},t={},m={},x=h.is(y),p=h.is(B),n=p&&Array.isArray(B.stackedReferences),q=function q(E){var C=!n;if(n){C=B.stackedReferences.some(function D(F){return E===F.attributesValue.PID})}return C},w=function w(C){return !q(C)&&!h.is(s.collectionUtils.getReferenceFromCollection(C))},A=function A(){if(p&&Array.isArray(B.stackedConnections)){B.stackedConnections.push(m)}else{s.collectionUtils.addConn(m,{silent:i,merge:o,parse:r})}},v=function v(){var C=function C(D){var E=h.is(D.attributesValue)?D.attributesValue:null;if(E){if(E.isInstanceOf){if(p&&Array.isArray(B.stackedInstances)){B.stackedInstances.push(D)}else{s.collectionUtils.addInst(D,{silent:i,merge:o,parse:r})}if(x){if(w(E.isInstanceOf)){y.push(E.isAggregatedBy)}}}else{if(x){if(w(E.PID)){y.push(E.PID)}}if(p&&Array.isArray(B.stackedReferences)){B.stackedReferences.push(D)}else{s.collectionUtils.addRef(D,{silent:i,merge:o,parse:r})}}}};C(z);C(t)},j=function j(){var D=null,F,C,G,E;if(!h.is(u)){return m}for(D in u){if(u.hasOwnProperty(D)){if(D.contains("from.")){F=D.substring(D.indexOf("from.")+5);z[F]=u[D]}else{if(D.contains("to.")){F=D.substring(D.indexOf("to.")+3);t[F]=u[D]}else{if(D.contains("attributesValue")){m=u.attributesValue}else{m[D]=u[D]}}}}}m.from=h.is(z.PID)?z.PID:(h.is(z.attributesValue)?z.attributesValue.PID:null);m.to=h.is(t.PID)?t.PID:(h.is(t.attributesValue)?t.attributesValue.PID:null);if(!h.is(m.type)){C=m.PID;if(h.is(C,"string")){G=C.split("|");if(Array.isArray(G)){if(0<G.length){E=G[0];m.type=E}else{d.debug(s.name,"ERROR: no | to split on in pid "+C)}}else{d.debug(s.name,"ERROR: Could not split "+C+" on |")}}else{d.debug(s.name,"ERROR: No PID Attribute")}}v();A();return m};return j()},parseAuthoringResponse:function e(k,m){var j=this,l=(h.is(m)&&h.is(m.data)&&m.data!=="")?JSON.parse(m.data):null,n={stackedConnections:[]},i;k=k||{};k=h.merge(k,{instancesAndReferences:[],connections:[]});k.instancesAndReferences.forEach(function(q){var o=q.attributesValue,p,r;if(o.hasOwnProperty("isInstanceOf")){p=j.collectionUtils.getInstanceFromCollection(o.PID);if(!h.is(p)){}else{p.set(o)}}else{r=j.collectionUtils.getReferenceFromCollection(o.PID);if(!h.is(r)){}else{r.set(o)}}});k.connections.forEach(function(p){var o=j.parse(p,n);if(h.is(l)&&l.type.contains(o.type)){i=o}else{j.collectionUtils.addConn(o)}});return i}});return b});