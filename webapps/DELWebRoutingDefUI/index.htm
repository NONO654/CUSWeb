<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>

<!-- Application Metas -->
<title>Process Management</title>
<meta name="property" content="3DS" />
<meta name="author" content="Dassault SystÃ¨mes" />
<meta name="description" content="Manufactured Process Management Widget" />
<meta name="autoRefresh" content="0" />
<meta charset="UTF-8" />

<!-- Loader definition -->
<script type="text/javascript" src="../AmdLoader/AmdLoader.js"></script>

<!-- Bootstrap -->
<script type="text/javascript">
	var environment       = null,
		myWidget		  = null,
        depends           = [],
        isNewArchi          = null,
        oldMGAAppPath     = 'DS/DELWebMfgAssetsDefUI/init',
        newMGAAppPath     = 'DS/DELMGAApp/App',
		standaloneDepends = 'UWA/Environments/Standalone';

require(['DS/DELWebMfgAssetsDefModelServices/BehaviorUtil'], function (BehaviorUtil) {
    isNewArchi = BehaviorUtil.isNewArchi();
    if (isNewArchi) {
        depends.push(newMGAAppPath);
    }
    else {
        depends.push(oldMGAAppPath);
    }

    //Standalone
    if (typeof widget === 'undefined') {
        depends.push(standaloneDepends);
    }

	require(depends, function (init, Standalone) {
        if (isNewArchi) {
            init = new init();
        }

		if (typeof widget === "undefined") {
			environment = new Standalone();
			environment.launchWidget();
			myWidget = environment.getWidget();
		}
		else {
			myWidget = widget;
		}

		if (typeof myWidget === "object") {
			myWidget.addEvent('onLoad',       init.onLoad);
			myWidget.addEvent('onSearch',     init.onSearch);
			myWidget.addEvent('endEdit',      init.endEditPreferences);
			myWidget.addEvent('onResize',     init.onResize);
			myWidget.addEvent('onRefresh',    init.onRefresh);
			myWidget.addEvent('onViewChange', init.onViewChange);
		}
    });
});

</script>
</head>
</html>
