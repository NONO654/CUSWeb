define("DS/SMAProcWebAuthoringUtils/cmp-review-mapping/ParameterListTableView",["UWA/Core","UWA/Controls/Abstract","DS/Tree/TreeListView","DS/Tree/TreeDocument","DS/Tree/TreeNodeModel","DS/Utilities/Array","DS/SMAProcWebContents/WUXControlUtil","i18n!DS/SMAProcWebCMMUtils/assets/nls/SMAJSCMMDataFlowUtilsNLS","css!DS/UIKIT/UIKIT.css","css!DS/SMAProcWebAuthoringUtils/cmp-review-mapping/ParameterListTableView.css"],function(k,h,g,a,f,n,i,j){var c,d,m,e,b,l,o;m=function(q){var p,r=q.nodeModel;if(!q.isHeader&&r.options.grid){p=i.ParameterNameView(r.options.grid);if(e&&e.getName()===r.options.grid.getName()){p.classList.add("parameter-mapped");b=r}q.cellView.elements.container.setContent(p)}return p};d=h.extend({name:"ParameterListTableView",init:function(p){this._parent(p);this._initDefaultOptions()},_initDefaultOptions:function(){var q,p;this.nodeCache={};this.parameterCache={};c=[{dataIndex:"tree",text:this.options.heading,width:"auto",isDraggable:false,isEditable:false,onCellRequest:m.bind(this)}];l=k.createElement("div",{"class":"notVisible"});q=j["Dataflow.Destination.Activity"];o=k.createElement("div",{html:{tag:"div","class":"placeholdermsg",html:'<span class="fonticon fonticon-info info-icon"></span><span>'+q+"</span>"}});p=k.createElement("div",{styles:{height:"100%",width:"100%"}});p.appendChild(l);p.appendChild(o);p.inject(this.options.elements.tableContainer)},buildTabelView:function(p){var q;this.unloadDocument();q=this.elements.treeListView=this.getTreeListViewObject();this._buildTreeListView(q,function(){this._loadDocument(q);p&&p()}.bind(this))},doCRUDOnNodes:function(s,p,t,q){var u,w=[],x=[],v=[],r=[];for(u in p){if(p.hasOwnProperty(u)){if(s[u]===undefined){w.push(u)}else{if(s[u]!==p[u]){v.push(u)}else{if(s[u]===p[u]&&!t[u].isVisible()){r.push(u)}}}}}for(u in s){if(s.hasOwnProperty(u)){if(p[u]===undefined){x.push(u)}}}q.prepareUpdate();w.forEach(function(y){t[y].remove();delete t[y]});v.forEach(function(y){t[y].updateOptions({label:y,grid:s[y]})});r.forEach(function(y){t[y].show()});x.forEach(function(y){q.addRoot(this.getTreeNodeModel(s[y]))}.bind(this));q.pushUpdate()},_loadDocument:function(s){var r,t,q,p;this.model=r=new a({useAsyncPreExpand:false});t=s.getManager();t.loadDocument(r);p=t.getScroller();p.onScroll(function(){this.dispatchEvent("parameterListViewScrolled")}.bind(this));q&&t.scrollToNode(q);this.dispatchEvent("parameterListViewCreated")},_buildTreeListView:function(p,r){l.classList.add("wux-controls-parameter-list-view");p.elements.container.addClassName("wux-controls-parameter-table-view");this.elements.body=k.createElement("div",{"class":"wux-controls-process-body",html:[{tag:"div",styles:{position:"relative",height:"100%"},html:p}]});this.elements.body.inject(l);var q=p.getManager();p.onNodeClick(function(u){var t,x,w,v=u.view.getBoundingClientRect().left,s=u.view.getBoundingClientRect().top;w=arguments[0];x=w.nodeModel;if(!w.isHeader&&x.options.grid){t=w.nodeModel.options.grid;this.dispatchEvent("onParameterSelect",[{toParameter:t,xAxis:v,yAxis:s,nodeModel:x}])}}.bind(this));q.onReady(function(){r()})},getTreeListViewObject:function(){return new g({columns:c,defaultCellHeight:30,resize:{rows:false,columns:true},showVerticalLines:true,useTransparentScroller:false,alternateRowColor:false,isEditable:false,iconsSize:22,isSortable:false,show:{rowHeaders:false,columnHeaders:true},selection:{nodes:true,cells:false,rowHeaders:true,columnHeaders:true,unselectAllOnEmptyArea:true,toggle:false,canMultiSelect:false},performances:{buildLinks:false,useRequestAnimationFrameRendering:false,debounceCellRequest:true,debounceCellInternalUpdateTimer:10},showLoaderIndicator:true,enableDragAndDrop:false,shouldAcceptDrag:function(){return false},height:"auto",apiVersion:"2",allowUnsafeHTMLContent:false})},setDataContainer:function(q){var p;this.dataContainer=q;l.classList.add("notVisible");o.classList.remove("notVisible");if(!this.elements.treeListView||!this.model){this.buildTabelView()}if(q){p=j["Dataflow.Destination.SelectParameter"]}else{p=j["Dataflow.Destination.Activity"]}this.clearNodes(this.nodeCache,this.model);this.parameterCache={};o.querySelectorAll("span")[1].innerText=p},clearNodes:function(p,q){var r;if(q){q.prepareUpdate();for(r in p){p[r].remove();delete p[r]}q.pushUpdate()}},updateTable:function(r,p,q){e=q;if(!this.model){this.buildTabelView(function(){this.doCRUDOnNodes(p,this.parameterCache,this.nodeCache,this.model)}.bind(this))}else{this.doCRUDOnNodes(p,this.parameterCache,this.nodeCache,this.model)}this.parameterCache=p;if(p&&Object.keys(p).length>0){l.classList.remove("notVisible");o.classList.add("notVisible")}else{if(r){l.classList.add("notVisible");o.classList.remove("notVisible");o.querySelectorAll("span")[1].innerText=j["Dataflow.Destination.ParameterNotAvailable"]}else{l.classList.add("notVisible");o.classList.remove("notVisible");o.querySelectorAll("span")[1].innerText=j["Dataflow.Destination.SelectParameter"]}}},getTreeNodeModel:function(q){var p;if(!this.nodeCache[q.getName()]){p=this.createNode(q)}else{p=this.nodeCache[q.getName()]}return p},createNode:function(q){var p;p=new f({label:q.getName(),grid:q});this.nodeCache[q.getName()]=p;return p},updateNode:function(s,r){var q;e=r;this.model.prepareUpdate();if(this.nodeCache[s.getName()]){q=this.nodeCache[s.getName()];q.updateOptions({label:s.getName(),grid:s});b&&b.updateOptions({label:b.options.label,grid:b.options.grid})}else{if(this.model.getRoots().length>0){this.model.addRoot(this.getTreeNodeModel(s))}else{var p={};p[s.getName()]=s;this.updateTable(s,p,s)}}this.model.pushUpdate()},filterParameters:function(s){var r,q=this.elements.treeListView.getManager();if(s!==""){r=q.search({shouldStop:function(){return false},match:function(t){if(s){var u=new RegExp(s.toLowerCase());var v=t.nodeModel.options.label;if(v&&u.test(v.toLowerCase())){return true}}return false}})}else{r=q.getRoots()}var p=q.getRoots();n.optimizedForEach(p,function(t){t.hide()});n.optimizedForEach(r,function(t){t.show()})},unloadDocument:function(){try{this.elements.treeListView&&this.elements.treeListView.getManager().unloadDocument();this.model=null;this.elements.treeListView&&this.elements.treeListView.destroy();this.elements.body&&this.elements.body.destroy();this.elements.tableContainer&&this.elements.tableContainer.empty()}catch(p){}}});return d});