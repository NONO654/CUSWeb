(function(b){function a(){}a.prototype={outputParams:[],inputParams:[],outputDataVals:null,inputDataVals:null,nominalInputValues:null,clear:function(){this.outputParams=[];this.inputParams=[];this.outputDataVals=null;this.inputDataVals=null},parseParamBlock:function(f,c){var g=f.split("\n");for(var d in g){d=g[d].trim();if(d.indexOf("=")<2){continue}var e=decodeURIComponent(d.split("=")[1].replace(/"/g,"").trim());console.log("parameter: "+e);c.push({name:e,coefficients:[],errors:{}})}},parseCoefficientBlock:function(h){var c=[];var i=h.split("\n");for(var e in i){e=i[e].trim();if(e.indexOf("|")<2){continue}var g=e.split("|");var f=g[0].trim();f=this.parseTerm(f);var d=parseFloat(g[1].trim());if(isNaN(d)){console.error("NaN coefficient while reading :"+e);console.error("string: "+g[1].trim())}c.push({term:f,coefficient:d})}return c},parseDataBlock:function(l){var c=[];l=l.replace(/-/g,"");var f=l.trim().split("\n");for(var h=0;h<f.length;h++){var e=f[h].trim();if(e.length>1&&e.indexOf("|")>=0){var d=e.split("|");var k=[];for(var g=1;g<d.length;g++){k.push(parseFloat(d[g].trim()))}c.push(k)}}return c},calcStats:function(e,g){var d=g.length;for(var m=0;m<d;m++){var k=e[0][m];var c=e[0][m];for(var h=1,f=e.length;h<f;h++){if(e[h][m]>c){c=e[h][m]}if(e[h][m]<k){k=e[h][m]}}g[m].min=k;g[m].max=c}},initNominalInputValue:function(){var d=this.inputParams;var c=d.length;this.nominalInputValues=[];for(var e=0;e<c;e++){this.nominalInputValues.push(0.5*(d[e].min+d[e].max))}},parseTerm:function(n){var f=this.inputParams.length;n=n.trim().replace(/\*\*/g,"e");var k=[];for(var g=0;g<f;g++){k.push(0)}if(n.toLowerCase()!=="constant"){var m=n.split("*");for(var h in m){var l=m[h];var d=l.split("e");if(d.length==1){d.push("1")}var c=d[0].substring(1);var j=parseInt(c,10)-1;var e=parseInt(d[1],10);k[j]=e}}return k},parseFile:function(c){var j="Input Parameters:",h="Output Parameters:",i="MODEL DATA",f="Matrix with design INPUTS:",e="Matrix with design OUTPUTS:",p="COEFFICIENTS for OUTPUT ";console.log("Starting the file parse");var o=c.split(j);var d=o[0].trim();c=o[1];console.log("technique: "+d);o=c.split(h);var m=o[0].trim();c=o[1];this.parseParamBlock(m,this.inputParams);o=c.split(i);var g=o[0].trim();c=o[1];this.parseParamBlock(g,this.outputParams);o=c.split(f);c=o[1];o=c.split(e);var q=o[0].trim();c=o[1];this.inputDataVals=this.parseDataBlock(q);this.calcStats(this.inputDataVals,this.inputParams);o=c.split(p+this.getYName(1));var l=o[0].trim();c=o[1];this.outputDataVals=this.parseDataBlock(l);this.calcStats(this.outputDataVals,this.outputParams);this.initNominalInputValue();for(var n=0;n<this.outputParams.length;n++){o=c.split(p+this.getYName(n+2));var k=o[0].split("----------------------+----------------------")[1].trim();c=o[1];console.log("parsing coefficients for output "+n);this.outputParams[n].coefficients=this.parseCoefficientBlock(k)}},getYName:function(c){if(c<10){return"y0"+c}else{return"y"+c}},evaluate:function(k){var l=this.outputParams.length;var j=this.inputParams.length;if(k.length!==j){throw"value array size does not match number of inputs"}var e=new Array(l);for(var f=0;f<l;f++){var d=this.outputParams[f].coefficients;var g=0;for(var c=0;c<d.length;c++){var i=d[c].term;var m=1;for(var h=0;h<i.length;h++){m=m*Math.pow(k[h],i[h])}g=g+d[c].coefficient*m;if(isNaN(m)||isNaN(g)){console.error("error: "+d[c].coefficient);console.error("coeffs["+c+"].term : ");console.error(d[c].term);console.error(k);throw"nan encountered in monomial"}}e[f]=g}return e}};b.RSMmodule=a})(this);