define("DS/SMAProcWebContents/FileChooser",["DS/SMAProcWebCommonControls/Polymer","DS/SMAProcWebCommonControls/utils","DS/SMAProcWebContents/ContentService","DS/SMAProcWebContents/CommonBehavior","DS/SMAProcWebContents/RuleHelper","DS/SMAProcWebContents/ObjectChooser","DS/SMAProcWebContents/ComboBox","UWA/Promise"],function(f,b,e,g,c){var a='<dom-module id="pcw-sdk-file-chooser"><template>    <style>        :host {            display: block;            width: 100%;        }        :host[disabled] { pointer-events:none;opacity:0.5;}        .fileError{ border: 1px solid red; }    </style>    <pcw-sdk-object-chooser id="objectChooser" plm-types="{{plmTypes}}" file-types="{{fileTypes}}" mode="{{mode}}"></pcw-sdk-object-chooser>    <div style="display:flex;margin-top:5px;" title="Select an existing file or provide new file name and press enter" class$="{{validateFileClass}}">        <div>File/Pattern*:&nbsp;&nbsp;</div>        <div style="flex-grow: 2">            <pcw-sdk-combo-box id="fileSelect" enable-search-flag placeholder="Select or Press \'Enter\' after providing new file"></pcw-sdk-combo-box>        </div>    </div></template></dom-module>';b.registerDomModule(a);var d=UWA.Promise;f({is:"pcw-sdk-file-chooser",properties:{mode:{type:String,value:"download"},plmTypes:{type:String,value:"DOCUMENT"},dataHandler:{type:String},fileTypes:{type:String,value:".txt",reflectToAttribute:true},validateFileClass:{type:String,value:""}},behaviors:[g],ready:function(){},setContentService:function(h){this.service=h;this.$.objectChooser.setContentService(h)},setModel:function(k,h,l,i){var j=this;k=k||"content";this.$.objectChooser.setModel(k,h,l);this.updateFileList(k,l,i)["finally"](function(){j.registerEvents([j.$.fileSelect,"select-change","onFileChange"],[j.$.objectChooser,"object-change","onObjectChange"])})},updateFileList:function(j,k,h){var i=this;var l=d.resolve(true);if(k){if(j==="content"){l=this.service.getContentFiles(k)}else{l=this.service.getParameterFiles(k)}l=l.then(function(n){var m=n.map(function(o){return{labelItem:o.getName(),valueItem:o.getName()}});if(!h&&n.length>0){h=n[0].getName()}i.$.fileSelect.setModel(m,h)})}else{i.$.fileSelect.setModel([],h)}return l},onFileChange:function(h){this._stopEvent(h);this.updateRule()},onObjectChange:function(k){var j=this;j._stopEvent(k);var i=k.detail.value.category;var h=k.detail.value.item;this.updateFileList(i,h)["finally"](function(){j.onFileChange()})},updateRule:function(){this.isRuleDirty=true;var h=this.getSelectedItem();if(h.file){this.validateFileClass=""}else{this.validateFileClass="fileError"}this.fire("data-change",{value:h})},getSelectedItem:function(){var h=this.$.objectChooser.getSelectedItem();h=Object.assign({},h,{file:this.$.fileSelect.getSelectedItem()});return h},setRule:function(h,m){var l,k,j;var i=c.parseRuleString(m,h);l=i.category;if(l==="content"){k=i.content}else{k=i.parameter}j=i.sourceFileName;this.rule={referenceId:i.referenceId,ruleString:m};this.dataHandler=i.dataHandler;this.setModel(l,h,k,j);return{file:j,category:l,selectedItem:k}},getRule:function(){if(this.isRuleDirty){this.rule=this._computeRule();this.isRuleDirty=false}return this.getSafe("ruleString",this.rule)},_computeRule:function(){var h=this.$.objectChooser.getDataContainer();var k=this.$.objectChooser.getSelectedItem();var j=this.$.fileSelect.getSelectedItem();var i=this._getRuleBuilder().setDataContainer(h);if(k.category==="content"){i.setContent(k.item)}else{i.setObjectParameter(k.item)}i.setSourceFileName(j);var l=i.getRule();return l}})});