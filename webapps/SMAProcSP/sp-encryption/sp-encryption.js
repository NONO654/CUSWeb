/*!  Copyright 2015 Dassault Systemes. All rights reserved. */
(function(){var d,a,b;var c={LINUX:"X",ISIGHT:"FiperCmd",MCS:"sso"};d=function(p,o){var n=256;var g=[],l,h,f,e,m="";for(l=0;l<n;l++){g[l]=l}h=0;for(l=0;l<n;l++){h=(h+g[l]+o.charCodeAt(l%o.length))%n;e=g[l];g[l]=g[h];g[h]=e}l=0;h=0;for(f=0;f<p.length;f++){l=(l+1)%n;h=(h+g[l])%n;e=g[l];g[l]=g[h];g[h]=e;m+=String.fromCharCode(p.charCodeAt(f)^g[(g[l]+g[h])%n])}return m};a=function(e){return(e||"").toString().replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;")};b=function(e){return(e||"").toString().replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\]\]>/g,"]]&gt;")};Polymer({is:"sp-encryption",properties:{pubkey:{value:null,notify:true}},ENCRYPTIONTYPES:c,encryptAESCBC:function(o,k){var g=128;var j=4;var e=16;var m=16;var h=forge.random.getBytesSync(g);var n=forge.pkcs5.pbkdf2(k,h,j,e);var f=forge.random.getBytesSync(m);var i=forge.cipher.createCipher("AES-CBC",n);i.start({iv:f});i.update(forge.util.createBuffer(o));i.finish();var l=forge.util.encode64(i.output.getBytes());return{cipher_text:l,salt:forge.util.encode64(h),iv:forge.util.encode64(f)}},decryptAESCBC:function(i,k,h,f){var e=4;var l=16;var g=forge.pkcs5.pbkdf2(k,forge.util.decode64(h),e,l);var j=forge.cipher.createDecipher("AES-CBC",g);j.start({iv:forge.util.decode64(f)});j.update(forge.util.createBuffer(forge.util.decode64(i)));j.finish();return j.output.toString()},decrypt:function(q,n){if(!q){throw new Error("Invalid message to encrypt")}if(!n){throw new Error("Invalid or missing private key")}var o;try{var l=q.split("|").map(forge.util.decode64);var h=l[1];var g=l[2];var i=l[3];var f=forge.pki.privateKeyFromPem("-----BEGIN PRIVATE KEY-----\n"+n+"\n-----END PRIVATE KEY-----\n");var m=forge.pki.rsa.decrypt(h,f);o=d(g,m);var k=forge.md.md5.create();k.update(h);k.update(g);var p=k.digest();if(p.data!==i){o=null}}catch(j){o=null}return o},encrypt:function(j,h){var k=h||this.pubkey;if(!k){throw new Error("Invalid or missing public key")}if(!j){throw new Error("Invalid data to encrypt")}var g=16;var o=forge.random.getBytesSync(g);var e=forge.pki.publicKeyFromPem("-----BEGIN PUBLIC KEY-----\n"+k+"\n-----END PUBLIC KEY-----\n");var i=forge.pki.rsa.encrypt(o,e,2);var f=d(j,o);var n=forge.md.md5.create();n.update(i);n.update(f);var l=n.digest();var m=forge.util.encode64;return"|"+m(i)+"|"+m(f)+"|"+m(l.data)+"|"},encryptCredentials:function(e,f){if(!e){throw new Error("Missing credentials")}var g='<ProtectedResourceSet><protectedResource resourceName="MCS"><credentialSet authenticationType="sso"><credential name="ticket">'+b(e.loginTicket)+'</credential></credentialSet></protectedResource><protectedResource resourceName="OS"><credentialSet authenticationType="'+a(e.domainName)+'"><credential name="user">'+b(e.windowsUser)+'</credential><credential name="password">'+b(e.windowsPass)+'</credential></credentialSet><credentialSet authenticationType="X"><credential name="user">'+b(e.linuxUser)+'</credential><credential name="password">'+b(e.linuxPass)+'</credential></credentialSet></protectedResource><protectedResource resourceName="IsightV5"><credentialSet authenticationType="FiperCmd"><credential name="user" sensitive="false">'+b(e.isightV5User)+'</credential><credential name="password" sensitive="true">'+b(e.isightV5Password)+"</credential></credentialSet></protectedResource></ProtectedResourceSet>";return this.encrypt(g,f)},encryptSingleCredential:function(i,e,k,g,h){if(!i||!g){throw"type and password are required arguments"}var j;if(e){j={type:i,creds:{user:e,password:g,enoviaUser:k}}}else{j={type:i,creds:{ticket:g}}}var f=JSON.stringify(j);return this.encrypt(f,h)}})}(this));