#  emxRGNStringResource.properties   -  Properties file.
#  Copyright (c) 1992-2018 Dassault Systemes.
#  All Rights Reserved.
#  This program contains proprietary and trade secret information of MatrixOne,
#  Inc.  Copyright notice is precautionary only
#  and does not evidence any actual or intended publication of such program
#
#  static const char RCSID[] = $Id: emxRGNStringResource.properties 349 2011-07-05 13:55:59Z yly $
#

# Enovia UI


emxRGN.Common.Name=名称
emxRGN.Common.Title=タイトル
emxRGN.Common.Description=説明
emxRGN.Common.Revision=リビジョン
emxRGN.Common.Type=タイプ
emxRGN.Common.Modified=修正済み
emxRGN.Common.Version=バージョン
emxRGN.Common.Actions=アクション
emxRGN.Common.State=ステート
emxRGN.Common.OpenNew=新しいウィンドウで開く
emxRGN.Common.Document=ドキュメント
emxRGN.Common.Owner=オーナー
emxRGN.Common.Originator=登録者
emxRGN.Common.Originated=登録日
emxRGN.Common.Policy=ポリシー
emxRGN.Common.Vault=ボールト
emxRGN.Common.Configure=構成
emxRGN.Common.Display= 表示

emxRGN.Tooltip.ShowReportModel=テンプレートを表示
emxRGN.Tooltip.UpToDateReport=レポートは最新のものです
emxRGN.Tooltip.NotUpToDateReport=レポートは最新のものではありません
emxRGN.Tooltip.UnexpectedError=レポート情報を取得することは不可能です

emxRGN.Command.DeleteSelected=選択項目を削除
emxRGN.Command.ConfirmDeleteSelected=選択した項目を削除してもよろしいですか？

emxRGN.Command.EditDetails=詳細編集
emxRGN.Command.Generate=作成
emxRGN.Command.GenerateWithChanges=変更情報付きで生成emxRGN.Command.CreateNew=新規作成
emxRGN.Command.Duplicate=複製

emxRGN.Command.CreateReport=レポートを作成
emxRGN.Command.Reports=レポート
# ##IR-277876
emxRGN.Command.ReportGenerations=レポートの作成

emxRGN.Command.CreateReportModel=テンプレートの作成
emxRGN.Command.Models=テンプレート
emxRGN.Command.ReportModels=テンプレート

emxRGN.Command.Templates=出力フォーマット
emxRGN.Command.CreateReportTemplate=出力フォーマットの作成
emxRGN.Command.ReportTemplates=出力フォーマット

# Impl TSK43434
emxRGN.Command.InputTypeFilter=入力タイプフィルタ
emxRGN.Label.Package=パッケージ
emxRGN.Label.InputTypes=入力タイプ

emxRGN.Menu.ReportGeneration=レポート生成
emxRGN.Menu.ReportTemplateDesigner=レポートテンプレートデザイナ

emxRGN.Heading.Properties=プロパティ

emxRGN.TreeCategory.WhereUsed=親アイテム

# ## Job
emxRGN.Job.CreateService=サービスの作成
emxRGN.Job.RunGeneration=生成中
emxRGN.Job.EstimatedTimeRemaining=(見積時間は{0}分です)
emxRGN.Job.EstimatedTimeExceeded=(見積時間が{0}分超過しています)

#  ## JSPs

emxRGN.Label.Name=名称
emxRGN.Label.AutoName=自動名称
emxRGN.Label.Title=タイトル
emxRGN.Label.Description=説明
emxRGN.Label.ReportModel=テンプレート
emxRGN.Label.ReportTemplate=出力フォーマット
emxRGN.Label.Done=完了
emxRGN.Label.Close=閉じる
emxRGN.Label.Cancel=キャンセル
emxRGN.Label.Next=次へ
emxRGN.Label.NoParametersRequired=選択したテンプレートはパラメータを必要としません
emxRGN.Label.NoConfigurationsRequired=選択した入力は構成フィルタに関連付けられていません
emxRGN.Label.OK=合格
emxRGN.Label.NOK=不合格
emxRGN.Label.Failed=失敗
emxRGN.Label.Aborted=中止
emxRGN.Label.LoadingConfiguration=構成を読込み中...
emxRGN.Label.LoadingModel=データモデルを読込み中...
emxRGN.Label.GenerationStarted=生成...
emxRGN.Label.Completed=完了
emxRGN.Label.ConfigurationFilters=構成フィルタ
emxRGN.Label.NoConfigurationFilter=構成フィルタがありません
emxRGN.Label.ReportsUsingTemplate=このテンプレートを使用しているレポート
emxRGN.Label.usedTemplates=このテンプレートで使用されているテンプレート
emxRGN.Label.usingTemplates=このテンプレートを使用しているテンプレート
emxRGN.Label.TargetDocument=対象ドキュメント
emxRGN.Label.Files=ファイル
emxRGN.Label.New=新規パッケージ
emxRGN.Label.CheckFiles=コードの確認
emxRGN.Label.CheckingOTScript=OTScriptの確認中...
emxRGN.Label.SavingOTScript= OTScriptを保存中...
emxRGN.Label.OTScriptOK= OK
emxRGN.Label.NewOtsMethod= OTScriptメソッドの例を挿入
emxRGN.Label.Clear=クリア
emxRGN.Label.PostEditionTitle=ポストエディション
emxRGN.Label.FieldName=プロパティ名
emxRGN.Label.FieldValue=プロパティ値
emxRGN.Label.Browse=参照...
emxRGN.Label.Reset=リセット
emxRGN.Label.Search=検索
emxRGN.Label.BackgroundGenerationLaunched=生成がバックグラウンドで起動されます
emxRGN.Label.BackgroundGenerationPending= このレポートで生成が進行中です
emxRGN.Label.Added=追加済み
emxRGN.Label.Deleted=削除済み
emxRGN.Label.OutputFormatFile= ファイル
emxRGN.Label.noOutputFormatFile= なし
emxRGN.Label.NameHTMLProperty= 名前：<small>{0}</small>
emxRGN.Label.TitleHTMLProperty= タイトル：<small>{0}</small>
emxRGN.Label.ParameterTitleHTMLProperty= パラメータ：
emxRGN.Label.InputHTMLProperty= {0}： <small>{1}</small>
emxRGN.Label.OutputFormatHTMLProperty= 出力形式：<small>{0} - {1}</small>
emxRGN.Label.InputTitleHTMLProperty= 入力：
emxRGN.Label.ProductConfTitleHTMLProperty=製品構成：<small>{0} - {1}</small>
emxRGN.Label.ProductConfNoTitleHTMLProperty=製品構成： <small>{0}</small>
emxRGN.Label.ProductConfIssueHTMLProperty= <span style=\"color: #F00\">関連製品構成を表示できません({0})</span>
emxRGN.Label.InputIssueHTMLProperty= レポート入力がテンプレート入力パラメータと一致しません
emxRGN.Label.PerformPostEdition=この生成はエディション後のアクションが必要です
emxRGN.Label.RelationshipDisplay= {0}({1}から{2})
emxRGN.Label.SelectData= データを選択...
emxRGN.Label.Features= フィーチャー
emxRGN.Label.Feature= フィーチャー
emxRGN.Label.Options= オプション
emxRGN.Label.Context= コンテキスト
emxRGN.Label.IncludedOptions= 含まれるオプション
emxRGN.Label.ExcludedOptions= 除外されたオプション

emxRGN.Alert.InvalidName= 次のいずれかの無効な文字が名称に含まれています：@ # $ \ " < > % , [ ] : * ? |
emxRGN.Alert.InvalidChars= 次の文字は無効です：@ # $ \ " < > % , [ ] : * ? |
emxRGN.Alert.PleaseEnterReportName=レポート名を入力してください
emxRGN.Alert.NewReport=新規レポートの名前を入力してください
emxRGN.Alert.PleaseFillReportModel=テンプレートを選択してください
emxRGN.Alert.PleaseFillReportTemplate=出力フォーマットを選択してください
emxRGN.Alert.EmptyParameters= すべての必須パラメータを入力する必要があります
emxRGN.Alert.ObjectStillUsed={1}で使用されているため{0}を削除できません
emxRGN.Alert.PleaseEnterName= 名称を入力するか、'自動名称'をオンにしてください
emxRGN.Alert.PleaseEnterTitle= タイトルを入力してください

emxRGN.Error.ReportUpdate= レポートを更新できません。入力値のいずれかが到達不能です
emxRGN.Error.ReportCreation= レポートを作成できません。入力値のいずれかが到達不能です
emxRGN.Error.RoleIsBadOrMissing=役割が設定されていないか正しくありません
emxRGN.Error.GeneratedDocumentCreationFailed= レポートの生成に失敗しました：
emxRGN.Error.ModelParseException=レポートモデル{0}は破損しているため、読み込むことができません
emxRGN.Error.InfiniteLoop= レポートで無限ループが発生しました。通常、パラメータが誤っているか条件なしでサブレポートが同じレポートテンプレートを呼び出すことが原因です
emxRGN.Error.InvalidSearchCharacters= 入力された文字の中に次の無効な文字が含まれています：@ # $ \ " < > % , [ ] :
emxRGN.Error.UnreachableSubTemplate=含まれているテンプレート{0}に到達できません
emxRGN.Error.InvalidSearchPattern= 検索パターンは少なくとも1つの文字を含む必要があり、*で始まることはできません

emxRGN.Preference.NonAppropriateContext= アクセス権限が付与されていません。資格証明で管理者ロールとして接続してください

emxRGN.Title.CreateReportStep1=ステップ1／3:詳細の指定
emxRGN.Title.CreateReportStep2=ステップ2／3:入力の指定
emxRGN.Title.CreateReportStep3=ステップ3／3:構成の指定
emxRGN.Title.ReportGeneration=レポートの生成
emxRGN.Title.CreateOutputFormat= 出力フォーマットの作成
emxRGN.Title.EditOutputFormat= 出力フォーマットの編集

emxRGN.Cardinality.Single=シングル
emxRGN.Cardinality.Optional=オプション
emxRGN.Cardinality.List=リスト


# RGN DataModel

emxRGN.Messages.XFailedToGetMethodsForRelY="{0}はリレーション{1}のメソッドの取得に失敗しました"
emxRGN.Messages.XFailedToGetMethodsForTypY="{0}はリレーション{1}のタイプの取得に失敗しました"

emxRGN.MissingNLS.ReservedBy=予約中のユーザー
emxRGN.MissingNLS.IsPublished=パブリッシュ済み
emxRGN.MissingNLS.IsBestSoFar=現時点のベスト
emxRGN.MissingNLS.MajorRevision=メジャーリビジョン
emxRGN.MissingNLS.MinorRevision=マイナーリビジョン
emxRGN.MissingNLS.Locker=ロック中のユーザー
emxRGN.MissingNLS.Locked=ロック中
emxRGN.MissingNLS.Organization=組織
emxRGN.MissingNLS.RevIndex=リビジョンインデックス

Implemented=実装先{0}
Implementing=実装元{0}

Help.Implemented= タイプが{0}の実装先エレメントを取得します
Help.Implementing= タイプが{0}の実装元エレメントを取得します

Category.Navigation=ナビゲーション
Category.Attributes=属性
Category.Relationships=リレーション
Category.Implement_Links=実装リンク
Category.Cast=タイプ
Category.Reference=参照
Category.FromRelationships=受信リレーション
Category.ToRelationships=発信リレーション
Category.FromTypes= 着信タイプ
Category.ToTypes= 発信タイプ
Category.Extensions=拡張

Type.RGNFile=ファイル
Type.ConfigurationEntity=構成エンティティ
Type.EnumValue=列挙値
Type.FunctionalReferenceOrInstance=機能参照またはインスタンス
Type.LogicalReferenceOrInstance=論理参照またはインスタンス
Type.RGNOccurrence=発生事象
Type.Effectivity= 有効性
Type.Model= モデル
Type.Combination= 組み合わせ

Attribute.AuthorizedValues={0}：許可値
Attribute.DefaultValue={0}：デフォルト値

Method.As={0}として
Method.As_Description=可能であれば、エレメントのタイプをサブタイプのいずれかに変更します。結果が生成されない場合があります
Method.Sub_Functions=サブ関数
Method.Sub_Functions_Description=現在の関数のサブ関数でループします
Method.Consumed_Ports= ポート(消費)
Method.Consumed_Ports_Description= 現在の関数のポートでループします
Method.Emitted_Ports= ポート(発行)
Method.Emitted_Ports_Description= 現在の関数のポートでループします
Method.Consumed_Flows= フロー(消費)
Method.Consumed_Flows_Description= 現在の関数のフローでループします
Method.Emitted_Flows= フロー(発行)
Method.Emitted_Flows_Description= 現在の関数のフローでループします
Method.Flows=フロー
Method.Flows_Description=現在の関数のフローでループします
Method.Functional_Representations=機能リプレゼンテーション
Method.Functional_Representations_Description=現在の関数の機能リプレゼンテーションでループします
Method.Reference=参照
Method.Reference_Description=機能リファレンスを取得します
Method.Sub_Components=サブコンポーネント
Method.Sub_Components_Description=現在のコンポーネントのサブコンポーネントでループします
Method.SystemTypes=システムタイプ
Method.SystemTypes_Description=現在のコンポーネントのシステムタイプでループします
Method.In_SystemTypes=内部システムタイプ
Method.In_SystemTypes_Description=現在のコンポーネントの内部システムタイプでループします
Method.Out_SystemTypes=外部システムタイプ
Method.Out_SystemTypes_Description=現在のコンポーネントの外部システムタイプでループします
Method.InOut_SystemTypes=内部／外部システムタイプ
Method.InOut_SystemTypes_Description=現在のコンポーネントの内部／外部システムタイプでループします
Method.NoDir_SystemTypes=システムタイプの方向なし
Method.NoDir_SystemTypes_Description=現在のコンポーネントの方向なしシステムタイプでループします
Method.Ports=ポート
Method.Ports_Description=現在のコンポーネントのポートでループします
Method.PortDirection=方向
Method.PortDirection_Description=現在のシステムタイプの方向を戻します
Method.In_Ports=内部ポート
Method.In_Ports_Description=現在のコンポーネントの内部ポートでループします
Method.Out_Ports=外部ポート
Method.Out_Ports_Description=現在のコンポーネントの外部ポートでループします
Method.InOut_Ports=内部／外部ポート
Method.InOut_Ports_Description=現在のコンポーネントの内部／外部ポートでループします
Method.NoDir_Ports=ポートの方向なし
Method.NoDir_Ports_Description=現在のコンポーネントの方向なしポートでループします
Method.PortConnectedComponents=接続されたコンポーネント
Method.PortConnectedComponents_Description=現在のポートに接続されているコンポーネントを取得します
Method.Logical_Representations=論理リプレゼンテーション
Method.Logical_Representations_Description=現在のコンポーネントの論理リプレゼンテーションでループします
Method.2DPicture=2D画像
Method.2DPicture_Description=エレメントの2D画像を取得します
Method.m1_name=名称
Method.m1_name_description=名称を取得します
Method.m1_description=説明
Method.m1_description_description=説明を取得します
Method.Vaulted_Requirement_Specification=ボールト済み要求仕様
Method.Vaulted_Requirement_Specification_Description=ボールトに含まれている要求仕様を取得しています
Method.Snapshots=スナップショット
Method.Snapshots.Help=エレメントのスナップショットを取得します
Method.SnapshotPictures=スナップショットの画像
Method.SnapshotPictures.Help=スナップショットエレメントの画像を取得します

Method.Effectivity_Expression=有効性の式
Method.Effectivity_Expression_Description=エレメントの有効性の式を取得します
Method.Effectivity= 有効性
Method.Effectivity_Description= エレメントの有効性を取得します
MethodParameter.ProjectedView= 予定ビュー
Method.EffectivityXMLExpression= 有効性XML式
Method.EffectivityXMLExpression_Description= 現在のエレメントの有効性XML式を取得します
Method.VariantExpression= バリアント有効性式
Method.VariantExpression_Description= 現在のエレメントのバリアント有効性式を取得します
Method.VariantXMLExpression= バリアント有効性XML式
Method.VariantXMLExpression_Description= 現在のエレメントのバリアント有効性XML式を取得します
Method.EvolutionExpression= 展開有効性式
Method.EvolutionExpression_Description= 現在のエレメントの展開有効性式を取得します
Method.EvolutionXMLExpression= 展開有効性XML式
Method.EvolutionXMLExpression_Description= 現在のエレメントの展開有効性XML式を取得します
Method.AttachedModelsDefinition= 添付モデル定義
Method.AttachedModelsDefinition_Description= 現在のエレメントに添付されたモデルの定義を取得します
Method.Extension.EffectivityTable= 有効性テーブル
Method.Extension.EffectivityTable_Description= インスタンス有効性をテーブルとして取得します
Method.Extension.AttachedModels= 添付モデル
Method.Extension.AttachedModels_Description= 現在のエレメントに添付されたモデルを取得します
Method.Extension.Combinations= 組み合わせ
Method.Extension.Combinations_Description= 有効性に利用可能なオプションの組み合わせを返します

Method.FileRichContents=リッチコンテンツ
Method.FileRichContents.Help=ドキュメントファイルの内容をリッチテキストとして戻します。\nサブ部品のパラメータはRTFドキュメントのチャプター名、または XLSXドキュメントのセクション名として使用することができます
MethodParameter.Chapter=サブ部品
Method.FileImageContents=画像コンテンツ
Method.FileImageContents.Help=ドキュメント画像ファイルのコンテンツを戻します
Method.ElementRichText=リッチテキスト
Method.ElementRichText.Help=エレメントのリッチテキストを戻します
Method.RGNFileName=名称
Method.RGNFileName.Help=ファイル名を取得します
Method.RGNFileFormat=形式
Method.RGNFileFormat.Help=ファイル形式を取得します
Method.RGNFileAttachment= ファイル添付
Method.RGNFileAttachment.Help= ファイルを生成済みファイルの添付として印刷します
Method.GetDocumentFiles=ドキュメントファイル
Method.GetDocumentFiles.Help=ドキュメントファイルを取得します
Method.AttributeEnumValue=値
Method.AttributeEnumValue.Help=列挙値を取得します
Method.GetConfigurations=構成
Method.GetConfigurations.Help=エンティティ構成を取得します
Method.GetReference= 参照({0})
Method.GetReference_Description=現在のインスタンスの参照を取得します
Method.LogicalPortConnectedComponents=接続されたインスタンスコンポーネント
Method.LogicalPortConnectedComponents_Description=現在のポートに接続されたインスタンスを取得します
Method.LogicalPortConnectedRefComponents=接続された参照コンポーネント
Method.LogicalPortConnectedRefComponents_Description= 現在のポートに接続された参照を取得します
Method.LogicalPortConnectedPorts=接続されたポート
Method.LogicalPortConnectedPorts_Description=現在のポートに接続されたポートを取得します
Method.LogicalPortExposedComponents=公開されたインスタンスコンポーネント
Method.LogicalPortExposedComponents_Description= 現在のポートに接続された子インスタンスを取得します 
Method.LogicalPortExposedRefComponents= 公開された参照コンポーネント
Method.LogicalPortExposedRefComponents_Description= 現在のポートに接続された子参照を取得します 
Method.LogicalPortExposedPorts=公開されたポート
Method.LogicalPortExposedPorts_Description=現在のポートに接続された子コンポーネントポートを取得します
Method.LogicalPortExposingPorts=公開しているポート
Method.LogicalPortExposingPorts_Description=現在のポートに接続された親コンポーネントポートを取得します
Method.LogicalPortDirection=方向
Method.LogicalPortDirection_Description=現在のポートの方向を取得します
Method.FunctionalPortConnectedFunctions=接続された関数
Method.FunctionalPortConnectedFunctions_Description=現在のポートに接続された関数を取得します
Method.FunctionalPortConnectedRefFunctions= 接続された参照関数
Method.FunctionalPortConnectedRefFunctions_Description= 現在のポートに接続された参照を取得します
Method.FunctionalPortConnectedPorts=接続されたポート
Method.FunctionalPortConnectedPorts_Description=現在のポートに接続されたポートを取得します
Method.FunctionalPortExposedFunctions=公開された関数
Method.FunctionalPortExposedFunctions_Description=現在のポートに接続された子関数を取得します
Method.FunctionalPortExposedRefFunctions= 公開された参照関数
Method.FunctionalPortExposedRefFunctions_Description= 現在のポートに接続された子参照を取得します 
Method.FunctionalPortExposedPorts=公開されたポート
Method.FunctionalPortExposedPorts_Description=現在のポートに接続された子関数ポートを取得します
Method.FunctionalPortExposingPorts=公開しているポート
Method.FunctionalPortExposingPorts_Description=現在のポートに接続された親関数ポートを取得します
Method.FunctionalPortDirection=方向
Method.FunctionalPortDirection_Description=現在のポートの方向を取得します
Method.SystemTypeConnectedComponents= 接続されたインスタンスコンポーネント
Method.SystemTypeConnectedComponents_Description= 現在のシステムタイプに接続されたインスタンスを取得します
Method.SystemTypeConnectedRefComponents= 接続された参照コンポーネント
Method.SystemTypeConnectedRefComponents_Description= 現在のシステムタイプに接続された参照を取得します
Method.SystemTypeConnectedSystemTypes=接続されたシステムタイプ
Method.SystemTypeConnectedSystemTypes_Description=現在のシステムタイプに接続されたシステムタイプを取得します
Method.SystemTypeOwner= 親インスタンス
Method.SystemTypeOwner_description= システムタイプ親インスタンスを取得します
Method.SystemTypeRefOwner= 親参照
Method.SystemTypeRefOwner_description= システムタイプ親参照を取得します
Method.FlowConnectedComponents= 接続されたインスタンスコンポーネント
Method.FlowConnectedComponents_Description= 現在のフローに接続されたインスタンスを取得します
Method.FlowConnectedRefComponents= 接続された参照コンポーネント
Method.FlowConnectedRefComponents_Description= 現在のフローに接続された参照を取得します
Method.FlowConnectedFlows=接続されたフロー
Method.FlowConnectedFlows_Description=現在のフローに接続されたフローを取得します
Method.FlowOwner= 親インスタンス
Method.FlowOwner_description= フロー親インスタンスを取得します
Method.FlowRefOwner= 親参照
Method.FlowRefOwner_description= フロー親参照を取得します
Method.PortGetOwner= 親インスタンス
Method.PortGetOwner_description= ポート親インスタンスを取得します
Method.PortGetRefOwner= 親参照
Method.PortGetRefOwner_description= ポート親参照を取得します
Method.PortDirection.In=内部
Method.PortDirection.Out=外部
Method.PortDirection.InOut=内部／外部
Method.PortDirection.NoDirection=方向なし
Method.PortDirection.Emission=発行
Method.PortDirection.Consumption=消費
Method.Sub_Products=サブ製品
Method.Sub_Products_Description=現在の製品のサブ製品でループします
Method.Schematic.AttachedLayouts=添付レイアウト
Method.Schematic.AttachedLayouts.Help=添付レイアウトのエレメントを表示します
Method.Schematic.AttachedSheets=添付シート
Method.Schematic.AttachedSheets.Help=添付シートのエレメントを表示します
Method.Schematic.AttachedViews=添付ビュー
Method.Schematic.AttachedViews.Help=添付ビューのエレメントを表示します
Method.Schematic.SheetPicture=画像
Method.Schematic.SheetPicture.Help=シートを表示する画像を取得します
Method.Schematic.ComposingSheets=シートの構成
Method.Schematic.ComposingSheets.Help=エレメントを構成するシートを表示します
Method.AttachedDocuments=添付ドキュメント
Method.AttachedDocuments_Description=エレメントの添付ドキュメントのリストを取得します
Method.AsExtension={0}
Method.AsExtension_Description=エレメントの"{0}"ビューを取得します
Method.Attached_Configuration= 添付された構成
Method.Attached_Configuration_Description= エレメントに添付された製品構成を取得

Method.SubProductionSystems=サブシステム
Method.SubProductionSystems_Description=現在のシステムのサブシステムでループします
Method.SubProductionOperations=サブ操作
Method.SubProductionOperations_Description=現在のシステムまたは操作のサブ操作でループします
Method.ProcessOutputs=プロセス出力
Method.ProcessOutputs_Description=現在のシステムまたは操作のプロセス出力でループします
Method.ImplementedProcess=実装プロセス
Method.ImplementedProcess_Description=現在のシステムの実装プロセスを取得します
Method.CapableResources=可能リソース
Method.CapableResources_Description=現在のシステムの可能リソースでループします
Method.WorkInstructions=作業指示
Method.WorkInstructions_Description=現在のシステムの作業指示でループします
Method.SubFProcess=サブプロセス
Method.SubFProcess_Description=現在のシステムのサブプロセスでループします
Method.AlternateTargets=代替対象
Method.AlternateTargets_Description=現在のシステムの代替対象でループします

Method.AttributeValue={0}
Method.AttributeValue.Help={0}の属性値を取得します
Method.RelationshipToX=To {0}
Method.RelationshipToX.Help=現在のリレーションのターゲットである{0}エレメントを取得します
Method.RelationshipFromX=From　{0}
Method.RelationshipFromX.Help=現在のリレーションのソースである{0}エレメントを取得します
Method.RelationshipXToY={0} to {1}
Method.RelationshipXToY.Help=リレーション{0}をたどり、タイプが{1}のターゲットを取得します
Method.RelationshipXFromY={0} from {1}
Method.RelationshipXFromY.Help=リレーション{0}をたどり、タイプが{1}のソースを取得します
Method.RelationshipsNamedX={0}
Method.RelationshipsNamedX.Help={0}という名称のリレーションを取得します
Method.IncomingRelationshipsNamedX=受信{0}
Method.IncomingRelationshipsNamedX.Help={0}という名称の受信リレーションを取得します

Method.PreviousElementInOccurrence=親インスタンス
Method.PreviousElementInOccurrence.Help=インスタンスのパスにある前のエレメントを取得します
Method.GetOccurrence=発生事象
Method.GetOccurrence.Help=インスタンスのパスを表す発生事象オブジェクトを取得します
Method.getPathInformation=説明
Method.getPathInformation.Help=指定されたパラメータに従って、発生事象エレメントの記述を取得します\n「属性名」は表示される属性の名称(例："name"または"PLM_ExternalID")である必要があります\n「区切り文字」は、発生事象の各エレメント間に印刷される文字列です
Method.getPathInformation.Parameter.PathAttributeName=属性名
Method.getPathInformation.Parameter.PathSeparator=区切り文字

Method.RTEAttributeValue={0} (リッチテキスト)
Method.RTEAttributeValue.Help={0}属性リッチテキストを取得します

Method.ParameterMaxValue= 最大値
Method.ParameterMaxValue.Help= パラメータの最大値を表示します
Method.ParameterMinValue= 最小値
Method.ParameterMinValue.Help= パラメータの最小値を表示します
Method.ParameterValue= 公称値
Method.ParameterValue.Help= パラメータの公称値を表示します
Method.ParameterValueDefaultUnit= デフォルトの単位
Method.ParameterValueDefaultUnit.Help=デフォルトの単位を表示します
Method.ParameterValueUnit= 単位を表示
Method.ParameterValueUnit.Help=パラメータの単位を表示します
Method.ParameterMaxValueWithTransfo=最大値()
Method.ParameterMaxValueWithTransfo.Help=パラメータの最大内部値を表示します。変換はパラメータに単位を入力すると適用されます
Method.ParameterMinValueWithTransfo=最小値()
Method.ParameterMinValueWithTransfo.Help=パラメータの最小内部値を表示します。変換はパラメータに単位を入力すると適用されます
Method.ParameterValueWithTransfo=値()
Method.ParameterValueWithTransfo.Help=パラメータの内部値を表示します。変換はパラメータに単位を入力すると適用されます
Method.ParameterValueWithTransfo.Unit=単位
Method.ParameterValueWithTransfo.UnitNotFound=<単位が見つかりません：{0}>
Method.ParameterValueWithTransfo.InvalidUnit=<無効な単位です：{0}>
Method.ParameterType=タイプ
Method.ParameterType.Help=パラメータのタイプを表示します

Method.Filter= フィルタ
Method.Filter.Help= 製品構成をエレメントに適用し、フィルタコンテキストを変更できます\n1つのパラメーターのみ入力するか(製品構成または事前定義構成)、あるいは製品構成を使用します
Method.AttachedProductConfigurations= 添付された製品構成
Method.AttachedProductConfigurations.Help= 現在のオブジェクトに添付された製品構成を取得します
Method.AttachedPredefinedConfigurations= 添付された事前定義構成
Method.AttachedPredefinedConfigurations.Help= 現在のオブジェクトに添付された事前定義構成を取得します
Category.Filter= フィルタ

Method.Search=検索
Method.Search.Help=タイプおよび名称パターンについて、データでループすることを許可します
Method.Print=プリント
Method.Print.Help=プリント情報のユーティリティメソッド\nadminKind: bus, connection, type, rel, interface\nidentification: TNR or ident\nselects: プリント情報\nseparator
Method.Query=Query
Method.Query.Help=プリント情報のユーティリティメソッド\nadminKind: bus, connection\nidentification pattern:\"typePattern\"$+\"namePattern\"$+\"revisionPattern\"\nselects: プリント情報\nseparator

Method.RangeDisplay= {0}：表示
Method.RangeDisplay.Help= 属性値のパブリック名を印刷します
Method.RangeDisplay.ItemName= 値の名称
Method.LifecycleCurrentStateDisplay= ステート表示
Method.LifecycleCurrentStateDisplay.Help= 現在のステートのパブリック名を印刷します
Method.LifecycleStates= ステータス
Method.LifecycleStates.Help= オブジェクトポリシーのステートでループします
Method.AttributeEnumValueDisplay=表示
Method.AttributeEnumValueDisplay.Help= 値に対応する表示を印刷します

Message.Invalid_Relation_Format=リレーションのメソッド名が正しくありません。正しい例：'<relationshipTypeName>_TO_<destinationTypeName>'
Message.Unsupported_File_Format=ファイル形式がサポートされていません
Message.CannotGetPathInformationVerifyParameters=発生事象情報を取得できません。パラメータを確認してください

#  ## OTScript

OTScriptChecker.ExpectedResultType=結果はタイプ$1でなければなりません

Method.Tooltip.GetReportDataAdditionnalDataComments=プロジェクトスペースから、名前が*additional data*と一致し、Report Dataというフォルダにある要求仕様のコメントを戻します
Method.Tooltip.Get2DDiagram=スナップショットから2Dダイアグラムを取得します
Method.Tooltip.GetAllSubComponents=すべてのサブコンポーネントを再帰的に取得します
Method.Tooltip.GetAllPorts=システムで使用されるシステムタイプをすべて取得します
Method.Tooltip.GetAllFlows=現在の関数とサブ関数のフローを再帰的に取得します
Method.Tooltip.GetAllSubFunctions=すべてのサブ関数を再帰的に取得します
Method.Tooltip.GetAllRequirements=仕様と仕様内の章に含まれるすべての要求を取得します
Method.Tooltip.GetAllChapters=すべての章を再帰的に取得します
Method.Tooltip.GetAllSubProducts=すべてのサブ製品を再帰的に取得します

# ## Particular translation, please keep the ',' as separator in any languages without extra spaces
Method.Navigation.SystemTypes=システムタイプ
Method.Navigation.In_SystemTypes=内部システムタイプ
Method.Navigation.Out_SystemTypes=外部システムタイプ
Method.Navigation.InOut_SystemTypes=内部／外部システムタイプ
Method.Navigation.NoDir_SystemTypes=方向システムタイプなし
Method.Navigation.Ports=ポート
Method.Navigation.In_Ports=内部ポート
Method.Navigation.Out_Ports=外部ポート
Method.Navigation.InOut_Ports=内部／外部ポート
Method.Navigation.NoDir_Ports=方向ポートなし
Method.Navigation.Effectivity_Expression=使用条件式
Method.Navigation.Snapshots=スナップショット
Method.Navigation.Sub_Components=サブコンポーネント
Method.Navigation.Sub_Functions=サブ関数
Method.Navigation.Emitted_Flows= フロー(発行)
Method.Navigation.Consumed_Flows= フロー(消費)
Method.Navigation.Sub_Products=サブ製品

Method.Extension.Vaulted_Requirement_Specification=ボールト済み要求仕様
Method.Extension.GetReportDataAdditionnalDataComments=レポートデータの追加データコメントを取得
Method.Extension.GetAllSubProducts=すべてのサブ製品を取得
Method.Extension.GetAllChapters=すべての章を取得
Method.Extension.Get2DDiagram=2Dダイアグラムを取得
Method.Extension.GetAllSubComponents=すべてのサブコンポーネントを取得
Method.Extension.GetAllPorts=すべてのシステムタイプを取得
Method.Extension.GetAllFlows=すべてのフローを取得
Method.Extension.GetAllSubFunctions=すべてのサブ関数を取得
Method.Extension.GetAllRequirements=すべての要求を取得

Method.Extension.GetParameters=パラメータを取得
Method.Extension.GetParameters.Help=現在の要求のPLMパラメータを取得します
Method.Extension.DisplayValueAndUnit=値と単位を表示
Method.Extension.DisplayValueAndUnit.Help=パラメータ値とその単位を表示します
Method.Extension.ConvertValueToUnit=値を指定単位に変換
Method.Extension.ConvertValueToUnit.Help=パラメータ内の単位を使用してパラメータ値を変換します
Method.Extension.DisplayValueToUnit=優先単位で値を表示
Method.Extension.DisplayValueToUnit.Help=メソッドで定義された優先単位を使用してパラメータ値を表示します

Method.Extension.AttributeValue= 属性値
Method.Extension.AttributeValue.Help= パラメータに名称が含まれている属性の値を印刷します

# Implement Task TSK695388
emxRGN.Command.Properties=プロパティ
emxRGN.Command.OTScript=OTScriptファイル

GenericConnector.Name=汎用コネクタ
GenericConnector.Property.ExposedTypes=公開するタイプ
GenericConnector.Property.ExposedTypes.Description=データモデルで公開するタイプの名称
GenericConnector.Property.ExposedTypes.Sample=例：Change, Change Action, Change Order, ...

DictionaryConnector.Name=辞書コネクタ
DictionaryConnector.Property.ExposedPackages=公開するパッケージ
DictionaryConnector.Property.ExposedPackages.Description=データモデルの入力に使用されるパッケージの名称。パッケージにはタイプ、リレーションおよび拡張を含めることができます
DictionaryConnector.Property.ExposedPackages.Sample=例：Requirement, Document, RFLPLMFunctional, ...

DefaultInputTypesProperty.Label= デフォルトの入力タイプ
DefaultInputTypesProperty.Description=「入力タイプフィルタ」の定義がない場合に、デフォルトで表示される入力タイプを定義します
UserInputTypesProperty.Label= 表示可能な入力タイプ
UserInputTypesProperty.Description= レポートテンプレートのパラメータフォームに表示される入力タイプを定義します
InputTypesProperty.ReferenceValuesLabel=利用可能なタイプ
InputTypesProperty.SelectedValuesLabel=選択されたタイプ

PLMConnector.ExpandSubTypesProperty.Label= "タイプ"フォルダにすべてのサブタイプを表示
PLMConnector.ExpandSubTypesProperty.Description= オブジェクト変換の"タイプ"フォルダのすべてのサブタイプが表示されます。これは適合オプションであり、アクティブ化するとタイプの読み込みが長くなります
PLMConnector.DisplayAbstractTypesProperty.Label= 要約タイプとリレーションを表示します
PLMConnector.DisplayAbstractTypesProperty.Description= データモデル計算に要約タイプとリレーションを含めます
PLMConnector.ShowRelationshipsFolderProperty.Label= "リレーション"フォルダを表示
PLMConnector.ShowRelationshipsFolderProperty.Description= リレーションを介してタイプデータに直接到達できる追加の方法を表示します。これは適合オプションであり、アクティブ化するとタイプの読み込みが長くなります
PLMConnector.ExpandTypesAndRelationshipsProperty.Label= タイプとリレーションを展開
PLMConnector.ExpandTypesAndRelationshipsProperty.Description= リレーションでは、"受信"/"発信"フォルダの作成中に目標タイプ/リレーションおよび子の方法を作成します。これは適合オプションであり、アクティブ化するとリレーションの読み込みが長くなります

# ## End of Particular

#  ## GWT


view_title_data=データ
view_title_structures=構造
view_title_properties=プロパティ
button_tooltip_redo=やり直し
button_tooltip_save=保存
button_tooltip_undo=元に戻す
button_tooltip_hideshowview=$<name>ビューを非表示／表示
button_tooltip_collapseall= データツリー内のすべての変数を折りたたみます

label_apply=適用
label_clear=クリア
label_filter=フィルタ
label_collapseall= すべて折りたたむ
label_readonly=読み取り専用
label_preview=プレビュー
label_refresh=更新
label_previewFailed=プレビューの表示に失敗しました：
label_checkModel=モデルは問題を含まないかをチェックします
label_verifyInput=入力パラメータが選択されているかを確認します
label_errorIs=エラーは以下です：
label_howTo=プレビューを取得するには：
label_fulfillInput=必要な場合は入力パラメータを記入してください
label_clickRefresh=[更新]ボタンをクリックします
label_previewInProgress=プレビューの生成処理中...

label_copy=コピー
label_paste=貼付け
label_check_condition=条件を確認
label_delete=削除

label_PAGE=ページ
label_MULTICOLUMN=複数列
label_FIELD=フィールド
label_CALL=呼出し

label_loop_display=ループ {0}/{1}:{2}
label_param_loop_display= {0}でループ：{1}
label_method_display={0}/{1}
label_terminal_text_display={0}/{1}
label_terminal_image_display={0}/{1}

label_input_parameter_relationship= {0}リレーション

message_sureToSave=保存せずに終了してもよろしいですか？

field_label_name=名称
field_label_type=タイプ
field_label_condition=条件
field_label_method=メソッド
field_label_receiver=受信者
field_label_variable=変数
field_label_loop_separator=ループセパレータ
field_label_code=コード
field_label_text=テキスト
field_label_parameter=パラメータ
field_label_parameters=パラメータ
field_label_style=スタイル
field_label_checkbox_do_not_generate_when_empty= 空の場合は無視
field_label_label=ラベル
field_label_orientation=方向
field_label_paper_size=用紙サイズ
field_label_url=URL
field_label_max_page_size=最大ページサイズ
field_label_column_count=数
field_label_column_width= 幅
field_label_error=エラー
field_label_sort_attribute= 属性のソート
field_label_cardinality= カーディナリティ
field_label_comments= コメント

field_value_unmodified=<未変更>
field_value_bulleted=箇条書き
field_value_numbered=番号付き

placeholder_filter=フィルタ

check_label_bold=太字
check_label_change_orientation=向きを変更
check_label_is_editable=編集可能
check_label_italic=斜体
check_label_loop_when_empty= 空のときにループ
check_label_underlined=下線
check_label_reverse_order= 逆順

field_button_label_new=新規
field_button_label_delete=削除

field_parameter_tooltip=タイプ：{0} ({1})

button_label_check=確認

tooltip_internal_name=内部名
tooltip_return_type=返送

menu_label_diagram_fit_to_page=ページに合わせる
menu_label_diagram_zoom_in=拡大
menu_label_diagram_zoom_out=縮小
menu_label_diagram_show_grid=グリッドを表示
menu_label_diagram_snap_to_grid=グリッドにスナップ

tag_title=セクション
tag_sectionTitle=セクションタイトル
tag_paragraph=段落
tag_itemizedlist=リスト
tag_listitem=リスト項目
tag_table=テーブル
tag_titleRow=ヘッダー行
tag_columnTitle=ヘッダーセル
tag_line=行
tag_cell=セル
tag_DataMethodCallLoop=メソッド呼び出しループ
tag_DataMethodCallText=メソッド呼び出しテキスト
tag_DataMethodCallImage=メソッド呼び出しイメージ
tag_DataTerminalText=テキスト
tag_DataTerminalCode=OTScriptコード
tag_SetProperty=フィールドを設定
tag_CallReportModel=サブレポートの呼び出し
tag_PageFormat=ページ形式
tag_DataTerminalPostEdition=ポストエディション項目
tag_ulink=ハイパーリンク
tag_MultiColumn=マルチカラム
tag_anchor= アンカー
tag_DataTerminalVariable=変数

type_structure= 構造
type_document= ドキュメント
type_instruction= 手順

orientation_portrait=縦
orientation_landscape=横
orientation_unspecified=未指定

paper_size_unspecified=未指定

error_message_default=エラーが発生しました
error_message_cannot_delete_parameter=削除できません。パラメータが使用中です
error_message_unknown_variable= "{0}はこのエレメントでは不明です"
error_message_unknown_method= "{0}はタイプ{1}で不明なメソッドです"

